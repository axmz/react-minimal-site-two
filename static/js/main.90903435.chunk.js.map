{"version":3,"sources":["routes.js","components/nav/index.jsx","components/page/index.jsx","layout/index.jsx","components/notfound/index.jsx","pages/home/credits.jsx","pages/home/home.jsx","pages/home/index.jsx","pages/events/music.jsx","pages/events/nightlife.jsx","pages/events/art.jsx","pages/events/index.jsx","pages/places/berlin.jsx","pages/places/malmo.jsx","pages/places/london.jsx","pages/places/index.jsx","App.js","serviceWorker.js","index.js"],"names":["routes","home","events","places","Submenu","match","useRouteMatch","className","path","map","r","to","key","Nav","Page","children","Layout","NotFound","Credits","href","Home","choosePage","page","useState","setPage","useLayoutEffect","includes","params","Music","Nightlife","Art","Events","history","useHistory","type","cityName","chooseEvent","push","Berlin","Malmo","London","Places","city","choosePlace","App","exact","Boolean","window","location","hostname","ReactDOM","render","StrictMode","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"oSASeA,EATA,CACX,IAAK,CAAC,WACN,UAAW,CAAC,MAAO,QAAS,aAC5B,UAAW,CAAC,SAAU,SAAU,YAChCC,KAAM,CAAC,WACPC,OAAQ,CAAC,MAAO,QAAS,aACzBC,OAAQ,CAAC,SAAU,SAAU,aCF3BC,EAAU,WACZ,IAAMC,EAAQC,YAAc,CAAC,UAAW,UAAW,MAEnD,OACI,yBAAKC,UAAU,gBACVP,EAAOK,EAAMG,MAAMC,KAAI,SAACC,GACrB,IAAMC,EAAoB,MAAfN,EAAMG,KAAeH,EAAMG,KAAOE,EAAIL,EAAMG,KAAO,IAAME,EACpE,OAAQ,kBAAC,IAAD,CAAME,IAAKF,EAAGH,UAAU,cAAcI,GAAIA,GAAKD,QAiBxDG,EAXH,WACR,OACI,yBAAKN,UAAU,OACX,kBAAC,IAAD,CAAMA,UAAU,cAAcI,GAAI,KAAlC,QACA,kBAAC,IAAD,CAAMJ,UAAU,cAAcI,GAAI,WAAlC,UACA,kBAAC,IAAD,CAAMJ,UAAU,cAAcI,GAAI,WAAlC,UACC,kBAAC,EAAD,QCdEG,EAPF,SAAC,GAAgB,IAAfC,EAAc,EAAdA,SAEX,OACA,yBAAKR,UAAU,QAAQQ,ICWZC,EAZA,SAAC,GAAkB,IAAhBD,EAAe,EAAfA,SAEd,OACI,oCACI,kBAAC,EAAD,KACKA,GAEL,kBAAC,EAAD,QCFGE,EAPE,WAEb,OACI,yBAAKV,UAAU,YAAf,QC4BOW,EA/BC,WAEZ,OACI,yBAAKX,UAAU,iBACX,uCAEA,6BACI,uBAAGY,KAAK,oHAAR,cAEJ,6BACI,uBAAGA,KAAK,8EAAR,gBAEJ,6BACI,uBAAGA,KAAK,wHAAR,oBAEJ,6BACI,uBAAGA,KAAK,qGAAR,iBAEJ,6BACI,uBAAGA,KAAK,kGAAR,iBAEJ,6BACI,uBAAGA,KAAK,iGAAR,gBAEJ,6BACI,uBAAGA,KAAK,sGAAR,2BCdDC,EAXF,WAET,OACI,yBAAKb,UAAU,cACX,yBAAKA,UAAU,SACX,8CCGhB,SAASc,EAAWC,GAChB,OAAQA,GAKJ,IAAK,UACD,OAAO,kBAAM,kBAAC,EAAD,OACjB,QACI,OAAO,kBAAM,kBAAC,EAAD,QAIzB,IAqBeF,EArBF,WACT,IAAMf,EAAQC,cADC,EAESiB,mBAAS,cAFlB,mBAERD,EAFQ,KAEFE,EAFE,KAcf,OAVAC,2BAAgB,WACRpB,GAASL,EAAOC,KAAKyB,SAASrB,EAAMsB,OAAOL,MAC3CE,EAAQH,EAAWhB,EAAMsB,OAAOL,OACV,MAAfjB,EAAMG,KACbgB,EAAQH,KAERG,EAAQ,kBAAC,EAAD,SAEb,CAACnB,EAAOmB,IAGP,kBAAC,EAAD,KACKF,ICzBEM,EAZD,WAEV,OACI,yBAAKrB,UAAU,eACX,yBAAKA,UAAU,SACX,0CCMDsB,EAXG,WAEd,OACI,yBAAKtB,UAAU,mBACX,yBAAKA,UAAU,SACX,8CCMDuB,EAXH,WAER,OACI,yBAAKvB,UAAU,aACX,yBAAKA,UAAU,SACX,wCCahB,IAwBewB,EAxBA,WACX,IAAM1B,EAAQC,cACR0B,EAAUC,cAFC,EAGOV,mBAAS,cAHhB,mBAGVD,EAHU,KAGJE,EAHI,KAiBjB,OAXAC,2BAAgB,WACRpB,GAASL,EAAOE,OAAOwB,SAASrB,EAAMsB,OAAOO,MAC7CV,EAnBZ,SAAqBW,GACjB,OAAQA,GACJ,IAAK,QACD,OAAO,kBAAM,kBAAC,EAAD,OACjB,IAAK,YACD,OAAO,kBAAM,kBAAC,EAAD,OACjB,QACI,OAAO,kBAAM,kBAAC,EAAD,QAYLC,CAAY/B,EAAMsB,OAAOO,OACX,YAAf7B,EAAMG,KACbwB,EAAQK,KAAK,WAAarC,EAAOE,OAAO,IAGxCsB,EAAQ,kBAAC,EAAD,SAEb,CAACnB,EAAOmB,EAASQ,IAGhB,kBAAC,EAAD,KACKV,IC1BEgB,EAXA,WAEX,OACI,yBAAK/B,UAAU,gBACX,yBAAKA,UAAU,SACX,2CCMDgC,EAXD,WAEV,OACI,yBAAKhC,UAAU,eACX,yBAAKA,UAAU,SACX,6CCMDiC,EAXA,WAEX,OACI,yBAAKjC,UAAU,gBACX,yBAAKA,UAAU,SACX,2CCahB,IAuBekC,EAvBA,WACX,IAAMpC,EAAQC,cACR0B,EAAUC,cAFC,EAGOV,mBAAS,cAHhB,mBAGVD,EAHU,KAGJE,EAHI,KAgBjB,OAXAC,2BAAgB,WACRpB,GAASL,EAAOG,OAAOuB,SAASrB,EAAMsB,OAAOe,MAC7ClB,EAlBZ,SAAqBW,GACjB,OAAQA,GACJ,IAAK,SACD,OAAO,kBAAM,kBAAC,EAAD,OACjB,IAAK,WACD,OAAO,kBAAM,kBAAC,EAAD,OACjB,QACI,OAAO,kBAAM,kBAAC,EAAD,QAWLQ,CAAYtC,EAAMsB,OAAOe,OACX,YAAfrC,EAAMG,KACbwB,EAAQK,KAAK,WAAarC,EAAOG,OAAO,IAGxCqB,EAAQ,kBAAC,EAAD,SAEb,CAACQ,EAAS3B,EAAOmB,IAGhB,kBAAC,EAAD,KACKF,ICbEsB,MAlBf,WACE,OACE,yBAAKrC,UAAU,OACb,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAM,CAAC,gBAAiB,YAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAM,CAAC,gBAAiB,YAC7B,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOqC,OAAK,EAACrC,KAAM,CAAC,SAAS,MAC3B,kBAAC,EAAD,UCNQsC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAS5C,MACvB,2DCXN6C,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,IAAD,CAAeC,SAAS,2BACtB,kBAAC,EAAD,QAIJC,SAASC,eAAe,SDqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.90903435.chunk.js","sourcesContent":["const routes = {\r\n    \"/\": [\"credits\"],\r\n    \"/events\": [\"art\", \"music\", \"nightlife\"],\r\n    \"/places\": [\"London\", \"Berlin\", \"Malmö\"],\r\n    home: [\"credits\"],\r\n    events: [\"art\", \"music\", \"nightlife\"],\r\n    places: [\"London\", \"Berlin\", \"Malmö\"]\r\n}\r\n\r\nexport default routes","import React  from 'react'\r\nimport { Link, useRouteMatch } from 'react-router-dom'\r\nimport routes from '../../routes'\r\n\r\nconst Submenu = () => {\r\n    const match = useRouteMatch([\"/events\", \"/places\", \"/\"])\r\n\r\n    return (\r\n        <div className=\"nav__submenu\">\r\n            {routes[match.path].map((r) => {\r\n                const to = match.path === \"/\" ? match.path + r : match.path + \"/\" + r\r\n                return (<Link key={r} className=\"nav__button\" to={to}>{r}</Link>)\r\n            })}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <nav className=\"nav\">\r\n            <Link className=\"nav__button\" to={\"/\"}>home</Link>\r\n            <Link className=\"nav__button\" to={\"/events\"}>events</Link>\r\n            <Link className=\"nav__button\" to={\"/places\"}>places</Link>\r\n            {<Submenu />}\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav","import React from 'react'\r\n\r\nconst Page = ({children}) => {\r\n\r\n    return (\r\n    <div className=\"page\">{children}</div>\r\n    )\r\n}\r\n\r\nexport default Page","import React from 'react'\r\nimport Nav from '../components/nav';\r\nimport Page from '../components/page';\r\n\r\nconst Layout = ({ children }) => {\r\n\r\n    return (\r\n        <>\r\n            <Page>\r\n                {children}\r\n            </Page>\r\n            <Nav />\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Layout","import React from 'react'\r\n\r\nconst NotFound = () => {\r\n\r\n    return (\r\n        <div className=\"notfound\">404</div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React from 'react'\r\n\r\nconst Credits = () => {\r\n\r\n    return (\r\n        <div className=\"page--credits\">\r\n            <h1>Credits</h1>\r\n\r\n            <div>\r\n                <a href=\"https://www.campaignlive.co.uk/article/elle-partners-feelunique-harvey-nichols-benefit-first-major-event/1520214\">art image</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://www.telegraph.co.uk/music/concerts/no-glastonbury-tickets-do-next/\">music image</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://www.iheartberlin.de/studio-berlin-entire-berghain-to-transform-into-giant-gallery-for-remainder-of-lockdown/\">nightlife image</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://unsplash.com/@edoering?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">London image</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://unsplash.com/@camil?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Berlin image</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://unsplash.com/@jolt?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">Malmo image</a>\r\n            </div>\r\n            <div>\r\n                <a href=\"https://unsplash.com/@gauravdsb?utm_source=unsplash&utm_medium=referral&utm_content=creditCopyText\">birds homepage image</a>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Credits","import React from 'react'\r\n\r\nconst Home = () => {\r\n\r\n    return (\r\n        <div className=\"page--home\">\r\n            <div className=\"image\">\r\n                <span>Lifestyle</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Home\r\n","import React, { useLayoutEffect, useState } from 'react'\r\nimport { useRouteMatch } from 'react-router-dom'\r\nimport Layout from '../../layout'\r\nimport routes from '../../routes.js'\r\nimport NotFound from '../../components/notfound/index'\r\nimport About from './about'\r\nimport Contacts from './contacts'\r\nimport Credits from './credits'\r\nimport HomePage from './home'\r\n\r\nfunction choosePage(page) {\r\n    switch (page) {\r\n        // case \"about\":\r\n        //     return () => <About />\r\n        // case \"contacts\":\r\n        //     return () => <Contacts />\r\n        case \"credits\":\r\n            return () => <Credits />\r\n        default:\r\n            return () => <HomePage />\r\n    }\r\n}\r\n\r\nconst Home = () => {\r\n    const match = useRouteMatch()\r\n    const [page, setPage] = useState('Loading...')\r\n\r\n    useLayoutEffect(() => {\r\n        if (match && routes.home.includes(match.params.page)) {\r\n            setPage(choosePage(match.params.page))\r\n        } else if (match.path === '/') {\r\n            setPage(choosePage())\r\n        } else {\r\n            setPage(<NotFound />)\r\n        }\r\n    }, [match, setPage])\r\n\r\n    return (\r\n        <Layout>\r\n            {page}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Home","import React from 'react'\r\n\r\nconst Music = () => {\r\n\r\n    return (\r\n        <div className=\"page--music\">\r\n            <div className=\"image\"> \r\n                <span>music</span>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Music\r\n","import React from 'react'\r\n\r\nconst Nightlife = () => {\r\n\r\n    return (\r\n        <div className=\"page--nightlife\">\r\n            <div className=\"image\"> \r\n                <span>nightlife</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Nightlife\r\n","import React from 'react'\r\n\r\nconst Art = () => {\r\n\r\n    return (\r\n        <div className=\"page--art\">\r\n            <div className=\"image\"> \r\n                <span>art</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Art","import React, { useLayoutEffect, useState } from 'react'\r\nimport { useRouteMatch, useHistory } from 'react-router-dom'\r\nimport Layout from '../../layout'\r\nimport routes from '../../routes.js'\r\nimport NotFound from '../../components/notfound/index'\r\nimport Music from './music'\r\nimport Nightlife from './nightlife'\r\nimport Art from './art'\r\n\r\nfunction chooseEvent(cityName) {\r\n    switch (cityName) {\r\n        case \"music\":\r\n            return () => <Music />\r\n        case \"nightlife\":\r\n            return () => <Nightlife />\r\n        default:\r\n            return () => <Art />\r\n    }\r\n}\r\n\r\nconst Events = () => {\r\n    const match = useRouteMatch()\r\n    const history = useHistory()\r\n    const [page, setPage] = useState('Loading...')\r\n\r\n    // useEffect(() => {\r\n    useLayoutEffect(() => {\r\n        if (match && routes.events.includes(match.params.type)) {\r\n            setPage(chooseEvent(match.params.type))\r\n        } else if (match.path === '/events') {\r\n            history.push(\"/events/\" + routes.events[0])\r\n            // setPage(chooseEvent())\r\n        } else {\r\n            setPage(<NotFound />)\r\n        }\r\n    }, [match, setPage, history])\r\n\r\n    return (\r\n        <Layout>\r\n            {page}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Events","import React from 'react'\r\n\r\nconst Berlin = () => {\r\n\r\n    return (\r\n        <div className=\"page--berlin\">\r\n            <div className=\"image\"> \r\n                <span>Berlin</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Berlin","import React from 'react'\r\n\r\nconst Malmo = () => {\r\n\r\n    return (\r\n        <div className=\"page--malmo\">\r\n            <div className=\"image\"> \r\n                <span>Malmö</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Malmo","import React from 'react'\r\n\r\nconst London = () => {\r\n\r\n    return (\r\n        <div className=\"page--london\">\r\n            <div className=\"image\"> \r\n                <span>London</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default London","import React, { useLayoutEffect, useState } from 'react'\r\nimport { useRouteMatch, useHistory } from 'react-router-dom'\r\nimport Layout from '../../layout'\r\nimport routes from '../../routes.js'\r\nimport NotFound from '../../components/notfound/index'\r\nimport Berlin from './berlin'\r\nimport Malmo from './malmo'\r\nimport London from './london'\r\n\r\nfunction choosePlace(cityName) {\r\n    switch (cityName) {\r\n        case \"Berlin\":\r\n            return () => <Berlin />\r\n        case \"Malmö\":\r\n            return () => <Malmo />\r\n        default:\r\n            return () => <London />\r\n    }\r\n}\r\n\r\nconst Places = () => {\r\n    const match = useRouteMatch()\r\n    const history = useHistory()\r\n    const [page, setPage] = useState('Loading...')\r\n\r\n    useLayoutEffect(() => {\r\n        if (match && routes.places.includes(match.params.city)) {\r\n            setPage(choosePlace(match.params.city))\r\n        } else if (match.path === '/places') {\r\n            history.push(\"/places/\" + routes.places[0])\r\n            // setPage(choosePlace())\r\n        } else {\r\n            setPage(<NotFound />)\r\n        }\r\n    }, [history, match, setPage])\r\n\r\n    return (\r\n        <Layout>\r\n            {page}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport default Places","import React from 'react';\nimport './App.css';\nimport Home from './pages/home';\nimport Events from './pages/events';\nimport Places from './pages/places';\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch >\n          <Route path={[\"/places/:city\", \"/places\"]}>\n            <Places />\n          </Route>\n          <Route path={[\"/events/:type\", \"/events\"]}>\n            <Events />\n          </Route>\n          <Route exact path={[\"/:page\",\"/\"]}>\n            <Home />\n          </Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/react-minimal-site-two\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>\n  ,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}